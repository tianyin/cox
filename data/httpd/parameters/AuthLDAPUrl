AuthLDAPUrl

Description:  URL specifying the LDAP search parameters 
Syntax:   AuthLDAPUrl  url [NONE|SSL|TLS|STARTTLS]   
Context:  directory, .htaccess 
Override:  AuthConfig 
Status:  Extension 
Module:  mod_authnz_ldap 

 An RFC 2255 URL which specifies the LDAP search parameters
    to use. The syntax of the URL is 
   ldap://host:port/basedn?attribute?scope?filter   
     If you want to specify more than one LDAP URL that Apache should try in turn, the syntax is: 
 AuthLDAPUrl "ldap://ldap1.example.com ldap2.example.com/dc=..." 

   Caveat:  If you specify multiple servers, you need to enclose the entire URL string in quotes;
otherwise you will get an error: "AuthLDAPURL takes one argument, URL to define LDAP connection.."  
You can of course use search parameters on each of these. 

  ldap 

         For regular ldap, use the
        string  ldap . For secure LDAP, use  ldaps 
        instead. Secure LDAP is only available if Apache was linked
        to an LDAP library with SSL support. 

 host:port 

         
           The name/port of the ldap server (defaults to
           localhost:389  for  ldap , and
           localhost:636  for  ldaps ). To
          specify multiple, redundant LDAP servers, just list all
          servers, separated by spaces.   mod_authnz_ldap  
          will try connecting to each server in turn, until it makes a
          successful connection. If multiple ldap servers are specified,
          then entire LDAP URL must be encapsulated in double quotes. 

           Once a connection has been made to a server, that
          connection remains active for the life of the
            httpd   process, or until the LDAP server goes
          down. 

           If the LDAP server goes down and breaks an existing
          connection,   mod_authnz_ldap   will attempt to
          re-connect, starting with the primary server, and trying
          each redundant server in turn. Note that this is different
          than a true round-robin search. 
         

 basedn 

         The DN of the branch of the
        directory where all searches should start from. At the very
        least, this must be the top of your directory tree, but
        could also specify a subtree in the directory. 

 attribute 

         The attribute to search for.
        Although RFC 2255 allows a comma-separated list of
        attributes, only the first attribute will be used, no
        matter how many are provided. If no attributes are
        provided, the default is to use  uid . It's a good
        idea to choose an attribute that will be unique across all
        entries in the subtree you will be using.  All attributes
        listed will be put into the environment with an AUTHENTICATE_ prefix
        for use by other modules. 

 scope 

         The scope of the search. Can be either  one  or
         sub . Note that a scope of  base  is
        also supported by RFC 2255, but is not supported by this
        module. If the scope is not provided, or if  base  scope
        is specified, the default is to use a scope of
         sub . 

 filter 

         A valid LDAP search filter. If
        not provided, defaults to  (objectClass=*) , which
        will search for all objects in the tree. Filters are
        limited to approximately 8000 characters (the definition of
         MAX_STRING_LEN  in the Apache source code). This
        should be more than sufficient for any application. In 2.4.10 and later,
        The word "none" may be used to not use any filter, which may be 
        required by some primitive LDAP servers. 
  When doing searches, the attribute, filter and username passed
    by the HTTP client are combined to create a search filter that
    looks like
     (&amp;( filter )( attribute = username )) . 

     For example, consider an URL of
     ldap://ldap.example.com/o=Example?cn?sub?(posixid=*) . When
    a client attempts to connect using a username of  Babs
    Jenson , the resulting search filter will be
     (&amp;(posixid=*)(cn=Babs Jenson)) . 

     An optional parameter can be added to allow the LDAP Url to override
    the connection type.  This parameter can be one of the following: 

  NONE 
         Establish an unsecure connection on the default LDAP port. This
        is the same as  ldap://  on port 389. 
     SSL 
         Establish a secure connection on the default secure LDAP port.
        This is the same as  ldaps://  
     TLS | STARTTLS 
         Establish an upgraded secure connection on the default LDAP port.
        This connection will be initiated on port 389 by default and then
        upgraded to a secure connection on the same port. 
  See above for examples of   AuthLDAPURL   URLs. 

 