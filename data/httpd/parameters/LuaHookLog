LuaHookLog

Description:  Provide a hook for the access log phase of a request
processing 
Syntax:   LuaHookLog  /path/to/lua/script.lua log_function_name  
Context:  server config, virtual host, directory, .htaccess 
Override:  All 
Status:  Experimental 
Module:  mod_lua 

 
    This simple logging hook allows you to run a function when httpd enters the 
    logging phase of a request. With it, you can append data to your own logs, 
    manipulate data before the regular log is written, or prevent a log entry 
    from being created. To prevent the usual logging from happening, simply return
     apache2.DONE  in your logging handler, otherwise return 
     apache2.OK  to tell httpd to log as normal.
 
 Example: 
 LuaHookLog /path/to/script.lua logger 

 -- /path/to/script.lua --
function logger(r)
    -- flip a coin:
    -- If 1, then we write to our own Lua log and tell httpd not to log
    -- in the main log.
    -- If 2, then we just sanitize the output a bit and tell httpd to 
    -- log the sanitized bits.

    if math.random(1,2) == 1 then
        -- Log stuff ourselves and don't log in the regular log
        local f = io.open("/foo/secret.log", "a")
        if f then
            f:write("Something secret happened at " .. r.uri .. "\n")
            f:close()
        end
        return apache2.DONE -- Tell httpd not to use the regular logging functions
    else
        r.uri = r.uri:gsub("somesecretstuff", "") -- sanitize the URI
        return apache2.OK -- tell httpd to log it.
    end
end 


 