Require

Description:  Tests whether an authenticated user is authorized by
an authorization provider. 
Syntax:   Require [not]  entity-name 
    [ entity-name ] ...  
Context:  directory, .htaccess 
Override:  AuthConfig 
Status:  Base 
Module:  mod_authz_core 

 This directive tests whether an authenticated user is authorized
    according to a particular authorization provider and the specified
    restrictions.   mod_authz_core   provides the following
    generic authorization providers: 

       Require all granted  
       Access is allowed unconditionally. 

        Require all denied  
       Access is denied unconditionally. 

        Require env  env-var  [ env-var ]
      ...  
       Access is allowed only if one of the given environment variables is
          set. 

        Require method  http-method  [ http-method ]
      ...  
       Access is allowed only for the given HTTP methods. 

        Require expr  expression    
       Access is allowed if  expression  evaluates to true. 
      Some of the allowed syntaxes provided by   mod_authz_user  ,
         mod_authz_host  ,
       and   mod_authz_groupfile   are: 

       Require user  userid  [ userid ]
      ...  
       Only the named users can access the resource. 

        Require group  group-name  [ group-name ]
      ...  
       Only users in the named groups can access the resource. 

        Require valid-user  
       All valid users can access the resource. 

        Require ip 10 172.20 192.168.2  
       Clients in the specified IP address ranges can access the
      resource. 
      Other authorization modules that implement require options
    include   mod_authnz_ldap  ,
      mod_authz_dbm  ,   mod_authz_dbd  ,
      mod_authz_owner   and   mod_ssl  . 

     In most cases, for a complete authentication and authorization
    configuration,  Require  must be accompanied by
      AuthName  ,   AuthType   and
      AuthBasicProvider   or
      AuthDigestProvider  
    directives, and directives such as
      AuthUserFile  
    and   AuthGroupFile   (to
    define users and groups) in order to work correctly. Example: 

     AuthType Basic
AuthName "Restricted Resource"
AuthBasicProvider file
AuthUserFile /web/users
AuthGroupFile /web/groups
Require group admin 


     Access controls which are applied in this way are effective for
     all  methods.  This is what is normally
    desired.  If you wish to apply access controls only to
    specific methods, while leaving other methods unprotected, then
    place the  Require  statement into a
      < Limit >  
    section. 

     The result of the  Require  directive
    may be negated through the use of the
     not  option.  As with the other negated authorization
    directive  < RequireNone > ,
    when the  Require  directive is negated it can
    only fail or return a neutral result, and therefore may never
    independently authorize a request. 

     In the following example, all users in the  alpha 
    and  beta  groups are authorized, except for those who
    are also in the  reject  group. 

     < Directory /www/docs >
    < RequireAll >
        Require group alpha beta
        Require not group reject
    < /RequireAll >
< /Directory > 


     When multiple  Require  directives are
    used in a single
     configuration section 
    and are not contained in another authorization directive like
      < RequireAll >  ,
    they are implicitly contained within a
      < RequireAny >  
    directive.  Thus the first one to authorize a user authorizes the
    entire request, and subsequent  Require  directives
    are ignored. 

      Security Warning 
     Exercise caution when setting authorization directives in
      Location   sections
    that overlap with content served out of the filesystem.  
    By default, these  configuration sections  overwrite authorization configuration
    in   Directory  ,  
    and   Files   sections. 
     The   AuthMerging   directive 
    can be used to control how authorization configuration sections are 
    merged. 
     

 See also 
   Access control howto  
  Authorization Containers  
   mod_authn_core   
   mod_authz_host   
  