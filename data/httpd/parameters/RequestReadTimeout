RequestReadTimeout

Description:  Set timeout values for receiving request headers and body from client.
 
Syntax:   RequestReadTimeout
[header= timeout [- maxtimeout ][,MinRate= rate ]
[body= timeout [- maxtimeout ][,MinRate= rate ]
  
Default:   header=20-40,MinRate=500 body=20,MinRate=500  
Context:  server config, virtual host 
Status:  Extension 
Module:  mod_reqtimeout 
Compatibility:  Available in version 2.2.15 and later; defaulted to disabled in
version 2.3.14 and earlier. 

 This directive can set various timeouts for receiving the request headers
    and the request body from the client. If the client fails to send headers or
    body within the configured time, a  408 REQUEST TIME OUT  error
    is sent. 

     For SSL virtual hosts, the header timeout values include the time needed
    to do the initial SSL handshake.  If the user's browser is configured to
    query certificate revocation lists and the CRL server is not reachable, the
    initial SSL handshake may take a significant time until the browser gives up
    waiting for the CRL.  Therefore the header timeout values should not be set
    to very low values for SSL virtual hosts.
    The body timeout values include the time needed for SSL renegotiation
    (if necessary). 

     When an   AcceptFilter   is in use
    (usually the case on Linux and FreeBSD), the socket is not sent to the
    server process before at least one byte (or the whole request for
     httpready ) is received. The header timeout configured with
     RequestReadTimeout  is only effective after the server process has
    received the socket. 

     For each of the two timeout types (header or body), there are three ways
    to specify the timeout:
     

       Fixed timeout value :     type = timeout    

     The time in seconds allowed for reading all of the request headers or
    body, respectively. A value of 0 means no limit. 
     

      Disable module for a vhost: :    header=0 body=0   

     This disables   mod_reqtimeout   completely. 
     

      Timeout value that is increased when data is
    received :    
     type = timeout ,MinRate= data_rate 
       

     Same as above, but whenever data is received, the timeout value is
    increased according to the specified minimum data rate (in bytes per
    second). 
     

      Timeout value that is increased when data is received, with an
    upper bound :    
     type = timeout - maxtimeout ,MinRate= data_rate 
       

     Same as above, but the timeout will not be increased above the second
    value of the specified timeout range. 
     

      