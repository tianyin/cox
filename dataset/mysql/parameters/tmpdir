tmpdir
The multipledirectory feature can be used to spread the load           between several physical disks. If the MySQL server is acting           as a replication slave, you should not set           tmpdir to point to a           directory on a memorybased file system or to a directory that           is cleared when the server host restarts. A replication slave           needs some of its temporary files to survive a machine restart           so that it can replicate temporary tables or           LOAD DATA           INFILE operations. If files in the temporary file           directory are lost when the server restarts, replication           fails. You can set the slave's temporary directory using the           slave_load_tmpdir variable.           In that case, the slave will not use the general           tmpdir value and you can set           tmpdir to a nonpermanent           location.  The path of the directory to use for creating temporary files.           It might be useful if your default /tmp           directory resides on a partition that is too small to hold           temporary tables. This option accepts several paths that are           used in roundrobin fashion. Paths should be separated by           colon characters (â:â) on Unix           and semicolon characters (â;â)           on Windows. If the MySQL server is acting as a replication           slave, you should not set           tmpdir to point to a           directory on a memorybased file system or to a directory that           is cleared when the server host restarts. For more information           about the storage location of temporary files, see           SectionÂ C.5.4.4, âWhere MySQL Stores Temporary Filesâ. A replication slave needs           some of its temporary files to survive a machine restart so           that it can replicate temporary tables or           LOAD DATA           INFILE operations. If files in the temporary file           directory are lost when the server restarts, replication           fails. 