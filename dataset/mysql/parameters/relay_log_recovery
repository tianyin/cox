relay_log_recovery
Prior to MySQL 5.6.6, if this option is enabled for a           multithreaded slave, and the slave fails with errors, you           cannot execute CHANGE MASTER TO           on that slave. In MySQL 5.6.6 or later, you can use           START SLAVE UNTIL           SQL_AFTER_MTS_GAPS to ensure that any gaps in the           relay log are processed; after running this statement, you can           then use CHANGE MASTER TO to fail this           slave over to a new master. (Bug #13893363)  When relay_log_recovery is enabled and the           slave has stopped due to errors encountered while running in           multithreaded mode, you cannot execute           CHANGE MASTER TO if there are           any gaps in the log. Beginning with MySQL 5.6.6, you should           use START SLAVE           UNTIL SQL_AFTER_MTS_GAPS to ensure that all gaps are           processed before switching back to singlethreaded mode or           executing a CHANGE MASTER TO statement. 