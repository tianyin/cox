RequestHeader

Description:  Configure HTTP request headers 
Syntax:   RequestHeader add|append|edit|edit*|merge|set|setifempty|unset
 header  [[expr=] value  [ replacement ]
[early|env=[!] varname |expr= expression ]]
  
Context:  server config, virtual host, directory, .htaccess 
Override:  FileInfo 
Status:  Extension 
Module:  mod_headers 
Compatibility:  SetIfEmpty available in 2.4.7 and later, expr=value 
available in 2.4.10 and later 

 This directive can replace, merge, change or remove HTTP request
    headers. The header is modified just before the content handler
    is run, allowing incoming headers to be modified. The action it
    performs is determined by the first argument. This can be one
    of the following values: 

       add  
     The request header is added to the existing set of headers,
    even if this header already exists. This can result in two
    (or more) headers having the same name. This can lead to
    unforeseen consequences, and in general  set ,
     append  or  merge  should be used instead. 

      append  
     The request header is appended to any existing header of the
    same name. When a new value is merged onto an existing header
    it is separated from the existing header with a comma. This
    is the HTTP standard way of giving a header multiple
    values. 

      edit  
      edit*  
     If this request header exists, its value is transformed according
    to a  regular expression 
    search-and-replace.  The  value  argument is a  regular expression , and the  replacement 
    is a replacement string, which may contain backreferences or format specifiers.
    The  edit  form will match and replace exactly once
    in a header value, whereas the  edit*  form will replace
     every  instance of the search pattern if it appears more
    than once. 

      merge  
     The request header is appended to any existing header of
    the same name, unless the value to be appended already appears in the
    existing header's comma-delimited list of values.  When a new value is
    merged onto an existing header it is separated from the existing header
    with a comma.  This is the HTTP standard way of giving a header multiple
    values.  Values are compared in a case sensitive manner, and after
    all format specifiers have been processed.  Values in double quotes
    are considered different from otherwise identical unquoted values. 

      set  
     The request header is set, replacing any previous header
    with this name 

      setifempty  
     The request header is set, but only if there is no previous header
    with this name. 
    Available in 2.4.7 and later. 

      unset  
     The request header of this name is removed, if it exists. If
    there are multiple headers of the same name, all will be removed.
     value  must be omitted. 
      This argument is followed by a header name, which can
    include the final colon, but it is not required. Case is
    ignored. For  set ,  append ,  merge  and
     add  a  value  is given as the third argument. If a
     value  contains spaces, it should be surrounded by double
    quotes. For  unset , no  value  should be given.
     value  may be a character string, a string containing format
    specifiers or a combination of both. The supported format specifiers
    are the same as for the   Header  ,
    please have a look there for details.  For  edit  both
    a  value  and a  replacement  are required, and are
    a  regular expression  and a
    replacement string respectively. 

     The  RequestHeader  directive may be followed by
    an additional argument, which may be any of: 
       early  
     Specifies  early processing . 
      env=[!] varname   
     The directive is applied if and only if the  environment variable   varname  exists.
        A  !  in front of  varname  reverses the test,
        so the directive applies only if  varname  is unset. 
      expr= expression   
     The directive is applied if and only if  expression 
        evaluates to true. Details of expression syntax and evaluation are
        documented in the  ap_expr  documentation. 
      Except in  early  mode, the
     RequestHeader  directive is processed
    just before the request is run by its handler in the fixup phase.
    This should allow headers generated by the browser, or by Apache
    input filters to be overridden or modified. 

 