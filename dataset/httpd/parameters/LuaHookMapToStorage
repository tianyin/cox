LuaHookMapToStorage

Description:  Provide a hook for the map_to_storage phase of request processing 
Syntax:   LuaHookMapToStorage  /path/to/lua/script.lua hook_function_name  
Context:  server config, virtual host, directory, .htaccess 
Override:  All 
Status:  Experimental 
Module:  mod_lua 

 Like  LuaHookTranslateName  but executed at the 
    map-to-storage phase of a request. Modules like mod_cache run at this phase,
    which makes for an interesting example on what to do here: 
     LuaHookMapToStorage /path/to/lua/script.lua check_cache 

     require"apache2"
cached_files = {}

function read_file(filename) 
    local input = io.open(filename, "r")
    if input then
        local data = input:read("*a")
        cached_files[filename] = data
        file = cached_files[filename]
        input:close()
    end
    return cached_files[filename]
end

function check_cache(r)
    if r.filename:match("%.png$") then -- Only match PNG files
        local file = cached_files[r.filename] -- Check cache entries
        if not file then
            file = read_file(r.filename)  -- Read file into cache
        end
        if file then -- If file exists, write it out
            r.status = 200
            r:write(file)
            r:info(("Sent %s to client from cache"):format(r.filename))
            return apache2.DONE -- skip default handler for PNG files
        end
    end
    return apache2.DECLINED -- If we had nothing to do, let others serve this.
end 


    
 